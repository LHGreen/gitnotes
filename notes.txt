#Overview of Git

Git consists of three parts

* the directory where your files are 
* the staging area where you construct the next version
* the object store where the versions are stored

# setting up Git

## Settings

```
git config --global user.name "name"
git config --global user.email "email"
git config --global color.ui auto
git config --global core.editor "gedit"
```
Online, using "gedit -w -s" is recommended, since this is supposed to block user input until text into gedit is entered, then return to the editor or something, but it doesn't seem to work. Meh. 

The `--global` option sets the settings for the whole computer, instead of just the directory

## Initialization

The command `git init` creates the git staging and object store in the current directory.

#Creating the next version

1. Make the desired changes to the files
2. Stage the changes to be at the next version 
3. Commit the staged changes as the next version

ex. 
```
gedit notes.txt
git add notes.txt
git commit
```

# Viewing changes

The 'git status' command shows you where you are at. The red colour indicates changes that aren't set to be part of the next version. The green colour indicates changes that are set to be part of the next version.

## Difference

View what isn't going to be part of the next version

```
git diff
```

View what is going to be part of the next version

```
git diff --staged
```

# History

You can see the history of your changes with: 
```
git log
```
You can specify an version by its number. The easiest way to get the numbers is to use

```
git log --oneline
```

## Specifying previous versions

You can specify a previous version with
`<commmit>~<n>` where `<commit>` is version
number of name associated with the version.
The `~<n>` says to go back n versions.

